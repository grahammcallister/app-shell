{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/session/session.module.ts","webpack:///./src/app/session/toolbar/toolbar.component.css","webpack:///./src/app/session/toolbar/toolbar.component.html","webpack:///./src/app/session/toolbar/toolbar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".title-bar {\\r\\n  -webkit-app-region: drag;\\r\\n  -webkit-user-select: none;\\r\\n  height: 36px;\\r\\n  background-color: cornflowerblue;\\r\\n  padding: none;\\r\\n  margin: 0px;\\r\\n}\\r\\n\\r\\n.title {\\r\\n  top: 5px;\\r\\n  color: white;\\r\\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\\r\\n  font-size: 10pt;\\r\\n}\\r\\n\\r\\n.title-bar-btns {\\r\\n\\r\\n}\\r\\n\\r\\n.title-bar-btn {\\r\\n  -webkit-app-region: no-drag;\\r\\n  -webkit-user-select: none;\\r\\n  width: 25px;\\r\\n  margin: 1px;\\r\\n}\\r\\n\\r\\n.toolbar {\\r\\n  background-color: lightblue;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"title-bar\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <div class=\\\"title col-lg-10\\\">{{ title }}</div>\\r\\n\\r\\n      <div class=\\\"title-bar-btns col-lg-2 p-1 text-right\\\">\\r\\n        <button class=\\\"btn-small title-bar-btn\\\" (click)=\\\"openDevTools();\\\" title=\\\"Toggle developer tools\\\">D</button>\\r\\n        <button class=\\\"btn-small title-bar-btn\\\" (click)=\\\"reload();\\\" title=\\\"Reload window\\\">R</button>\\r\\n        <button class=\\\"btn-small title-bar-btn\\\" (click)=\\\"minimiseWindow();\\\" title=\\\"Minimise window\\\">-</button>\\r\\n        <button class=\\\"btn-small title-bar-btn\\\" (click)=\\\"maximiseWindow();\\\" title=\\\"Maximise window\\\">+</button>\\r\\n        <button class=\\\"btn-small title-bar-btn\\\" (click)=\\\"closeWindow();\\\" title=\\\"Close window\\\">x</button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row toolbar\\\">\\r\\n            <app-toolbar></app-toolbar>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\nimport { ElectronService } from 'ngx-electron';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = this.getAppTitle();\r\n\r\n  constructor(private _electronService: ElectronService) { }\r\n\r\n  public getAppTitle() {\r\n    if (this._electronService.isElectronApp) {\r\n      return `${this._electronService.remote.app.getName()} ${this._electronService.remote.app.getVersion()}`;\r\n    }\r\n    return 'app';\r\n  }\r\n\r\n  public closeWindow() {\r\n      if (this._electronService.isElectronApp) {\r\n          this._electronService.ipcRenderer.send('close_window');\r\n          this._electronService.remote.getCurrentWindow().close();\r\n      }\r\n  }\r\n\r\n  public maximiseWindow() {\r\n    const win = this._electronService.remote.getCurrentWindow();\r\n    if (!win.isMaximized() && win.isMaximizable()) {\r\n      win.maximize();\r\n    } else {\r\n      win.unmaximize();\r\n    }\r\n  }\r\n\r\n  public minimiseWindow() {\r\n    this._electronService.remote.getCurrentWindow().minimize();\r\n  }\r\n\r\n  public openDevTools() {\r\n    this._electronService.remote.getCurrentWindow().webContents.toggleDevTools();\r\n  }\r\n\r\n  public reload() {\r\n    this._electronService.remote.getCurrentWindow().webContents.reload();\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxElectronModule } from 'ngx-electron';\r\nimport { AppComponent } from './app.component';\r\nimport { SessionModule } from './session/session.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NgbModule.forRoot(),\r\n    NgxElectronModule,\r\n    SessionModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxElectronModule } from 'ngx-electron';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxElectronModule,\n    NgbModule\n  ],\n  declarations: [ToolbarComponent],\n  exports: [\n    ToolbarComponent\n  ]\n})\nexport class SessionModule { }\n","module.exports = \"\\r\\n\"","module.exports = \"<div class=\\\"container-fluid p-1\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-3\\\">\\n      <button class=\\\"btn btn-sm\\\" (click)=\\\"newWindowClick()\\\">New</button>\\n    </div>\\n    <div class=\\\"col-lg-4\\\">\\n      <small>Windows: {{ windowCount }}</small>\\n    </div>\\n    <div class=\\\"col-lg-5\\\"></div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, OnDestroy, Input, Output, ChangeDetectorRef } from '@angular/core';\nimport { ElectronService } from 'ngx-electron';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.css']\n})\nexport class ToolbarComponent implements OnInit, OnDestroy {\n\n  constructor(private _electronService: ElectronService, private _cdr: ChangeDetectorRef) {}\n\n  private unsubscribe: () => void;\n\n  @Input()\n  @Output()\n  windowCount: string = this.getWindowCount();\n\n  ngOnInit() {\n    console.log('ngOnInit Toolbar');\n    if (this._electronService.isElectronApp) {\n      this._electronService.ipcRenderer.on('window_count', (sender, args) => {\n        console.log(`Renderer heard window_count ${args}`);\n        this.setWindowCount(args);\n        });\n        this._electronService.ipcRenderer.send('window_count');\n    }\n  }\n\n  setWindowCount(count: string) {\n    this.windowCount = count;\n    this._cdr.detectChanges();\n  }\n\n  getWindowCount() {\n    if (!this.windowCount) {\n      return '1';\n    }\n    this._cdr.detectChanges();\n    return this.windowCount;\n  }\n\n  ngOnDestroy() {\n    if (this._electronService.isElectronApp) {\n      this._electronService.ipcRenderer.removeListener('window_count', (count) => this.setWindowCount(count));\n    }\n  }\n\n  newWindowClick(): void {\n    console.log('New window click');\n    if (this._electronService.isElectronApp) {\n      this._electronService.ipcRenderer.send('NEW_WINDOW');\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}